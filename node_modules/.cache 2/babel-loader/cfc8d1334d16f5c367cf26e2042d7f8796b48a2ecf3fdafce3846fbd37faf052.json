{"ast":null,"code":"import React,{useEffect,useState,useCallback}from\"react\";import{hsbToRgb,rgbToHex,getRgbLabLightness,calculateContrastRatio,colorDistance}from\"../utils/colorUtils\";import\"../styles/ColorGrid.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ColorGrid=_ref=>{let{hue,isFiltering,isATextContrast,isAATextContrast,isAAATextContrast,lValues,onDotClick,activeDots,keyHexCode}=_ref;const[dots,setDots]=useState([]);const[colorCache,setColorCache]=useState([]);// Pre-calculate color cache\nuseEffect(()=>{const newColorCache=Array(101).fill(null).map(()=>Array(101).fill(null));for(let brightness=0;brightness<=100;brightness++){for(let saturation=0;saturation<=100;saturation++){const[r,g,b]=hsbToRgb(hue,saturation,brightness);const hexColor=rgbToHex(r,g,b).toUpperCase();const labLightness=Math.round(getRgbLabLightness(r,g,b));newColorCache[brightness][saturation]={hexColor,labLightness,hsbText:`H: ${hue}° S: ${saturation}% B: ${brightness}%`};}}setColorCache(newColorCache);},[hue]);// Update dots when cache or filters change\nuseEffect(()=>{const newDots=[];const lValuesSet=new Set(lValues);let closestDot=null;let hasExactMatch=false;// First pass: collect all dots and find closest match\nfor(let row=0;row<101;row++){for(let col=0;col<101;col++){var _colorCache$brightnes;const brightness=100-row;const cached=(_colorCache$brightnes=colorCache[brightness])===null||_colorCache$brightnes===void 0?void 0:_colorCache$brightnes[col];if(cached){const exactMatch=cached.hexColor.toUpperCase()===keyHexCode.toUpperCase();if(exactMatch){hasExactMatch=true;closestDot={distance:0,row,col};}else if(!hasExactMatch){const distance=colorDistance(cached.hexColor,keyHexCode);if(!closestDot||distance<closestDot.distance){closestDot={distance,row,col};}}let isFiltered=false;if(isFiltering){isFiltered=!lValuesSet.has(cached.labLightness);if(!isFiltered&&(isATextContrast||isAATextContrast||isAAATextContrast)){const contrastRatio=calculateContrastRatio(cached.hexColor,\"#000000\");if(isATextContrast){isFiltered=contrastRatio<3;}else if(isAATextContrast){isFiltered=contrastRatio<4.5;}else if(isAAATextContrast){isFiltered=contrastRatio<7;}}}else if(isATextContrast||isAATextContrast||isAAATextContrast){const contrastRatio=calculateContrastRatio(cached.hexColor,\"#000000\");if(isATextContrast){isFiltered=contrastRatio<3;}else if(isAATextContrast){isFiltered=contrastRatio<4.5;}else if(isAAATextContrast){isFiltered=contrastRatio<7;}}const dotKey=`${row}-${col}`;newDots.push({row,col,hexColor:cached.hexColor,labLightness:cached.labLightness,hsbText:cached.hsbText,isActive:activeDots.has(dotKey),isFiltered});}}}// Second pass: update the single closest dot to be active\nif(closestDot){const dotIndex=newDots.findIndex(dot=>dot.row===closestDot.row&&dot.col===closestDot.col);if(dotIndex!==-1){newDots[dotIndex]={...newDots[dotIndex],isActive:true};}}setDots(newDots);},[colorCache,isFiltering,isATextContrast,isAATextContrast,isAAATextContrast,lValues,activeDots,keyHexCode]);const handleDotClick=useCallback(dot=>{onDotClick(dot);},[onDotClick]);return/*#__PURE__*/_jsx(\"div\",{className:\"color-grid\",children:dots.map(dot=>/*#__PURE__*/_jsx(\"div\",{className:`dot ${dot.isActive?\"active\":\"\"} ${dot.isFiltered?\"filtered\":\"\"}`,style:{backgroundColor:dot.hexColor},onClick:()=>handleDotClick(dot),children:/*#__PURE__*/_jsxs(\"div\",{className:\"hex-tooltip\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"hex-value\",children:dot.hexColor}),/*#__PURE__*/_jsxs(\"div\",{className:\"lab-value\",children:[\"L*: \",dot.labLightness]}),/*#__PURE__*/_jsx(\"div\",{className:\"hsb-value\",children:dot.hsbText})]})},`${dot.row}-${dot.col}`))});};export default ColorGrid;","map":{"version":3,"names":["React","useEffect","useState","useCallback","hsbToRgb","rgbToHex","getRgbLabLightness","calculateContrastRatio","colorDistance","jsx","_jsx","jsxs","_jsxs","ColorGrid","_ref","hue","isFiltering","isATextContrast","isAATextContrast","isAAATextContrast","lValues","onDotClick","activeDots","keyHexCode","dots","setDots","colorCache","setColorCache","newColorCache","Array","fill","map","brightness","saturation","r","g","b","hexColor","toUpperCase","labLightness","Math","round","hsbText","newDots","lValuesSet","Set","closestDot","hasExactMatch","row","col","_colorCache$brightnes","cached","exactMatch","distance","isFiltered","has","contrastRatio","dotKey","push","isActive","dotIndex","findIndex","dot","handleDotClick","className","children","style","backgroundColor","onClick"],"sources":["/Users/jamessullivan/Documents/color-grid/src/components/ColorGrid.tsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { Dot, ColorCache } from \"../types\";\nimport {\n  hsbToRgb,\n  rgbToHex,\n  getRgbLabLightness,\n  calculateContrastRatio,\n  colorDistance,\n} from \"../utils/colorUtils\";\nimport \"../styles/ColorGrid.css\";\n\ninterface ColorGridProps {\n  hue: number;\n  isFiltering: boolean;\n  isATextContrast: boolean;\n  isAATextContrast: boolean;\n  isAAATextContrast: boolean;\n  lValues: number[];\n  onDotClick: (dot: Dot) => void;\n  activeDots: Set<string>;\n  keyHexCode: string;\n}\n\nconst ColorGrid: React.FC<ColorGridProps> = ({\n  hue,\n  isFiltering,\n  isATextContrast,\n  isAATextContrast,\n  isAAATextContrast,\n  lValues,\n  onDotClick,\n  activeDots,\n  keyHexCode,\n}) => {\n  const [dots, setDots] = useState<Dot[]>([]);\n  const [colorCache, setColorCache] = useState<ColorCache[][]>([]);\n\n  // Pre-calculate color cache\n  useEffect(() => {\n    const newColorCache: ColorCache[][] = Array(101)\n      .fill(null)\n      .map(() => Array(101).fill(null));\n\n    for (let brightness = 0; brightness <= 100; brightness++) {\n      for (let saturation = 0; saturation <= 100; saturation++) {\n        const [r, g, b] = hsbToRgb(hue, saturation, brightness);\n        const hexColor = rgbToHex(r, g, b).toUpperCase();\n        const labLightness = Math.round(getRgbLabLightness(r, g, b));\n        newColorCache[brightness][saturation] = {\n          hexColor,\n          labLightness,\n          hsbText: `H: ${hue}° S: ${saturation}% B: ${brightness}%`,\n        };\n      }\n    }\n\n    setColorCache(newColorCache);\n  }, [hue]);\n\n  // Update dots when cache or filters change\n  useEffect(() => {\n    const newDots: Dot[] = [];\n    const lValuesSet = new Set(lValues);\n    let closestDot: { distance: number; row: number; col: number } | null =\n      null;\n    let hasExactMatch = false;\n\n    // First pass: collect all dots and find closest match\n    for (let row = 0; row < 101; row++) {\n      for (let col = 0; col < 101; col++) {\n        const brightness = 100 - row;\n        const cached = colorCache[brightness]?.[col];\n\n        if (cached) {\n          const exactMatch =\n            cached.hexColor.toUpperCase() === keyHexCode.toUpperCase();\n          if (exactMatch) {\n            hasExactMatch = true;\n            closestDot = { distance: 0, row, col };\n          } else if (!hasExactMatch) {\n            const distance = colorDistance(cached.hexColor, keyHexCode);\n            if (!closestDot || distance < closestDot.distance) {\n              closestDot = { distance, row, col };\n            }\n          }\n\n          let isFiltered = false;\n          if (isFiltering) {\n            isFiltered = !lValuesSet.has(cached.labLightness);\n            if (\n              !isFiltered &&\n              (isATextContrast || isAATextContrast || isAAATextContrast)\n            ) {\n              const contrastRatio = calculateContrastRatio(\n                cached.hexColor,\n                \"#000000\"\n              );\n              if (isATextContrast) {\n                isFiltered = contrastRatio < 3;\n              } else if (isAATextContrast) {\n                isFiltered = contrastRatio < 4.5;\n              } else if (isAAATextContrast) {\n                isFiltered = contrastRatio < 7;\n              }\n            }\n          } else if (isATextContrast || isAATextContrast || isAAATextContrast) {\n            const contrastRatio = calculateContrastRatio(\n              cached.hexColor,\n              \"#000000\"\n            );\n            if (isATextContrast) {\n              isFiltered = contrastRatio < 3;\n            } else if (isAATextContrast) {\n              isFiltered = contrastRatio < 4.5;\n            } else if (isAAATextContrast) {\n              isFiltered = contrastRatio < 7;\n            }\n          }\n\n          const dotKey = `${row}-${col}`;\n          newDots.push({\n            row,\n            col,\n            hexColor: cached.hexColor,\n            labLightness: cached.labLightness,\n            hsbText: cached.hsbText,\n            isActive: activeDots.has(dotKey),\n            isFiltered,\n          });\n        }\n      }\n    }\n\n    // Second pass: update the single closest dot to be active\n    if (closestDot) {\n      const dotIndex = newDots.findIndex(\n        (dot) => dot.row === closestDot!.row && dot.col === closestDot!.col\n      );\n      if (dotIndex !== -1) {\n        newDots[dotIndex] = {\n          ...newDots[dotIndex],\n          isActive: true,\n        };\n      }\n    }\n\n    setDots(newDots);\n  }, [\n    colorCache,\n    isFiltering,\n    isATextContrast,\n    isAATextContrast,\n    isAAATextContrast,\n    lValues,\n    activeDots,\n    keyHexCode,\n  ]);\n\n  const handleDotClick = useCallback(\n    (dot: Dot) => {\n      onDotClick(dot);\n    },\n    [onDotClick]\n  );\n\n  return (\n    <div className=\"color-grid\">\n      {dots.map((dot) => (\n        <div\n          key={`${dot.row}-${dot.col}`}\n          className={`dot ${dot.isActive ? \"active\" : \"\"} ${\n            dot.isFiltered ? \"filtered\" : \"\"\n          }`}\n          style={{ backgroundColor: dot.hexColor }}\n          onClick={() => handleDotClick(dot)}\n        >\n          <div className=\"hex-tooltip\">\n            <div className=\"hex-value\">{dot.hexColor}</div>\n            <div className=\"lab-value\">L*: {dot.labLightness}</div>\n            <div className=\"hsb-value\">{dot.hsbText}</div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ColorGrid;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAE/D,OACEC,QAAQ,CACRC,QAAQ,CACRC,kBAAkB,CAClBC,sBAAsB,CACtBC,aAAa,KACR,qBAAqB,CAC5B,MAAO,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAcjC,KAAM,CAAAC,SAAmC,CAAGC,IAAA,EAUtC,IAVuC,CAC3CC,GAAG,CACHC,WAAW,CACXC,eAAe,CACfC,gBAAgB,CAChBC,iBAAiB,CACjBC,OAAO,CACPC,UAAU,CACVC,UAAU,CACVC,UACF,CAAC,CAAAT,IAAA,CACC,KAAM,CAACU,IAAI,CAAEC,OAAO,CAAC,CAAGvB,QAAQ,CAAQ,EAAE,CAAC,CAC3C,KAAM,CAACwB,UAAU,CAAEC,aAAa,CAAC,CAAGzB,QAAQ,CAAiB,EAAE,CAAC,CAEhE;AACAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAA2B,aAA6B,CAAGC,KAAK,CAAC,GAAG,CAAC,CAC7CC,IAAI,CAAC,IAAI,CAAC,CACVC,GAAG,CAAC,IAAMF,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAEnC,IAAK,GAAI,CAAAE,UAAU,CAAG,CAAC,CAAEA,UAAU,EAAI,GAAG,CAAEA,UAAU,EAAE,CAAE,CACxD,IAAK,GAAI,CAAAC,UAAU,CAAG,CAAC,CAAEA,UAAU,EAAI,GAAG,CAAEA,UAAU,EAAE,CAAE,CACxD,KAAM,CAACC,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CAAGhC,QAAQ,CAACW,GAAG,CAAEkB,UAAU,CAAED,UAAU,CAAC,CACvD,KAAM,CAAAK,QAAQ,CAAGhC,QAAQ,CAAC6B,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,CAChD,KAAM,CAAAC,YAAY,CAAGC,IAAI,CAACC,KAAK,CAACnC,kBAAkB,CAAC4B,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CAAC,CAC5DR,aAAa,CAACI,UAAU,CAAC,CAACC,UAAU,CAAC,CAAG,CACtCI,QAAQ,CACRE,YAAY,CACZG,OAAO,CAAE,MAAM3B,GAAG,QAAQkB,UAAU,QAAQD,UAAU,GACxD,CAAC,CACH,CACF,CAEAL,aAAa,CAACC,aAAa,CAAC,CAC9B,CAAC,CAAE,CAACb,GAAG,CAAC,CAAC,CAET;AACAd,SAAS,CAAC,IAAM,CACd,KAAM,CAAA0C,OAAc,CAAG,EAAE,CACzB,KAAM,CAAAC,UAAU,CAAG,GAAI,CAAAC,GAAG,CAACzB,OAAO,CAAC,CACnC,GAAI,CAAA0B,UAAiE,CACnE,IAAI,CACN,GAAI,CAAAC,aAAa,CAAG,KAAK,CAEzB;AACA,IAAK,GAAI,CAAAC,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAG,GAAG,CAAEA,GAAG,EAAE,CAAE,CAClC,IAAK,GAAI,CAAAC,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAG,GAAG,CAAEA,GAAG,EAAE,CAAE,KAAAC,qBAAA,CAClC,KAAM,CAAAlB,UAAU,CAAG,GAAG,CAAGgB,GAAG,CAC5B,KAAM,CAAAG,MAAM,EAAAD,qBAAA,CAAGxB,UAAU,CAACM,UAAU,CAAC,UAAAkB,qBAAA,iBAAtBA,qBAAA,CAAyBD,GAAG,CAAC,CAE5C,GAAIE,MAAM,CAAE,CACV,KAAM,CAAAC,UAAU,CACdD,MAAM,CAACd,QAAQ,CAACC,WAAW,CAAC,CAAC,GAAKf,UAAU,CAACe,WAAW,CAAC,CAAC,CAC5D,GAAIc,UAAU,CAAE,CACdL,aAAa,CAAG,IAAI,CACpBD,UAAU,CAAG,CAAEO,QAAQ,CAAE,CAAC,CAAEL,GAAG,CAAEC,GAAI,CAAC,CACxC,CAAC,IAAM,IAAI,CAACF,aAAa,CAAE,CACzB,KAAM,CAAAM,QAAQ,CAAG7C,aAAa,CAAC2C,MAAM,CAACd,QAAQ,CAAEd,UAAU,CAAC,CAC3D,GAAI,CAACuB,UAAU,EAAIO,QAAQ,CAAGP,UAAU,CAACO,QAAQ,CAAE,CACjDP,UAAU,CAAG,CAAEO,QAAQ,CAAEL,GAAG,CAAEC,GAAI,CAAC,CACrC,CACF,CAEA,GAAI,CAAAK,UAAU,CAAG,KAAK,CACtB,GAAItC,WAAW,CAAE,CACfsC,UAAU,CAAG,CAACV,UAAU,CAACW,GAAG,CAACJ,MAAM,CAACZ,YAAY,CAAC,CACjD,GACE,CAACe,UAAU,GACVrC,eAAe,EAAIC,gBAAgB,EAAIC,iBAAiB,CAAC,CAC1D,CACA,KAAM,CAAAqC,aAAa,CAAGjD,sBAAsB,CAC1C4C,MAAM,CAACd,QAAQ,CACf,SACF,CAAC,CACD,GAAIpB,eAAe,CAAE,CACnBqC,UAAU,CAAGE,aAAa,CAAG,CAAC,CAChC,CAAC,IAAM,IAAItC,gBAAgB,CAAE,CAC3BoC,UAAU,CAAGE,aAAa,CAAG,GAAG,CAClC,CAAC,IAAM,IAAIrC,iBAAiB,CAAE,CAC5BmC,UAAU,CAAGE,aAAa,CAAG,CAAC,CAChC,CACF,CACF,CAAC,IAAM,IAAIvC,eAAe,EAAIC,gBAAgB,EAAIC,iBAAiB,CAAE,CACnE,KAAM,CAAAqC,aAAa,CAAGjD,sBAAsB,CAC1C4C,MAAM,CAACd,QAAQ,CACf,SACF,CAAC,CACD,GAAIpB,eAAe,CAAE,CACnBqC,UAAU,CAAGE,aAAa,CAAG,CAAC,CAChC,CAAC,IAAM,IAAItC,gBAAgB,CAAE,CAC3BoC,UAAU,CAAGE,aAAa,CAAG,GAAG,CAClC,CAAC,IAAM,IAAIrC,iBAAiB,CAAE,CAC5BmC,UAAU,CAAGE,aAAa,CAAG,CAAC,CAChC,CACF,CAEA,KAAM,CAAAC,MAAM,CAAG,GAAGT,GAAG,IAAIC,GAAG,EAAE,CAC9BN,OAAO,CAACe,IAAI,CAAC,CACXV,GAAG,CACHC,GAAG,CACHZ,QAAQ,CAAEc,MAAM,CAACd,QAAQ,CACzBE,YAAY,CAAEY,MAAM,CAACZ,YAAY,CACjCG,OAAO,CAAES,MAAM,CAACT,OAAO,CACvBiB,QAAQ,CAAErC,UAAU,CAACiC,GAAG,CAACE,MAAM,CAAC,CAChCH,UACF,CAAC,CAAC,CACJ,CACF,CACF,CAEA;AACA,GAAIR,UAAU,CAAE,CACd,KAAM,CAAAc,QAAQ,CAAGjB,OAAO,CAACkB,SAAS,CAC/BC,GAAG,EAAKA,GAAG,CAACd,GAAG,GAAKF,UAAU,CAAEE,GAAG,EAAIc,GAAG,CAACb,GAAG,GAAKH,UAAU,CAAEG,GAClE,CAAC,CACD,GAAIW,QAAQ,GAAK,CAAC,CAAC,CAAE,CACnBjB,OAAO,CAACiB,QAAQ,CAAC,CAAG,CAClB,GAAGjB,OAAO,CAACiB,QAAQ,CAAC,CACpBD,QAAQ,CAAE,IACZ,CAAC,CACH,CACF,CAEAlC,OAAO,CAACkB,OAAO,CAAC,CAClB,CAAC,CAAE,CACDjB,UAAU,CACVV,WAAW,CACXC,eAAe,CACfC,gBAAgB,CAChBC,iBAAiB,CACjBC,OAAO,CACPE,UAAU,CACVC,UAAU,CACX,CAAC,CAEF,KAAM,CAAAwC,cAAc,CAAG5D,WAAW,CAC/B2D,GAAQ,EAAK,CACZzC,UAAU,CAACyC,GAAG,CAAC,CACjB,CAAC,CACD,CAACzC,UAAU,CACb,CAAC,CAED,mBACEX,IAAA,QAAKsD,SAAS,CAAC,YAAY,CAAAC,QAAA,CACxBzC,IAAI,CAACO,GAAG,CAAE+B,GAAG,eACZpD,IAAA,QAEEsD,SAAS,CAAE,OAAOF,GAAG,CAACH,QAAQ,CAAG,QAAQ,CAAG,EAAE,IAC5CG,GAAG,CAACR,UAAU,CAAG,UAAU,CAAG,EAAE,EAC/B,CACHY,KAAK,CAAE,CAAEC,eAAe,CAAEL,GAAG,CAACzB,QAAS,CAAE,CACzC+B,OAAO,CAAEA,CAAA,GAAML,cAAc,CAACD,GAAG,CAAE,CAAAG,QAAA,cAEnCrD,KAAA,QAAKoD,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BvD,IAAA,QAAKsD,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAEH,GAAG,CAACzB,QAAQ,CAAM,CAAC,cAC/CzB,KAAA,QAAKoD,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAC,MAAI,CAACH,GAAG,CAACvB,YAAY,EAAM,CAAC,cACvD7B,IAAA,QAAKsD,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAEH,GAAG,CAACpB,OAAO,CAAM,CAAC,EAC3C,CAAC,EAXD,GAAGoB,GAAG,CAACd,GAAG,IAAIc,GAAG,CAACb,GAAG,EAYvB,CACN,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAApC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}