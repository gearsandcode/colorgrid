{"ast":null,"code":"import React,{useEffect,useState,useCallback}from\"react\";import{hsbToRgb,rgbToHex,getRgbLabLightness,hexToHsb}from\"../utils/colorUtils\";import\"../styles/ColorGrid.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ColorGrid=_ref=>{let{hue,isFiltering,isATextContrast,isAATextContrast,isAAATextContrast,lValues,onDotClick,activeDots,keyHexCode,isPickingColor,activeLValue}=_ref;const[dots,setDots]=useState([]);const[colorCache,setColorCache]=useState([]);// Pre-calculate color cache\nuseEffect(()=>{const newColorCache=Array(101).fill(null).map(()=>Array(101).fill(null));for(let brightness=0;brightness<=100;brightness++){for(let saturation=0;saturation<=100;saturation++){const[r,g,b]=hsbToRgb(hue,saturation,brightness);const hexColor=rgbToHex(r,g,b).toUpperCase();const labLightness=Math.round(getRgbLabLightness(r,g,b));newColorCache[brightness][saturation]={hexColor,labLightness,hsbText:`H: ${hue}° S: ${saturation}% B: ${brightness}%`};}}setColorCache(newColorCache);},[hue]);// Update dots when cache or filters change\nuseEffect(()=>{const newDots=[];const lValuesSet=new Set(lValues);let matchingDot=null;// Convert key hex code to HSB if it exists\nlet keyHsb=null;if(keyHexCode){keyHsb=hexToHsb(keyHexCode);}// First pass: collect all dots and find matching dot\nfor(let row=0;row<101;row++){for(let col=0;col<101;col++){var _colorCache$brightnes;const brightness=100-row;const saturation=col;const cached=(_colorCache$brightnes=colorCache[brightness])===null||_colorCache$brightnes===void 0?void 0:_colorCache$brightnes[col];if(cached){// Check if this dot matches the key HSB values\nconst isActive=keyHsb!==null&&Math.abs(keyHsb.h-hue)<1&&// Allow small floating point differences\nMath.abs(keyHsb.s-saturation)<1&&Math.abs(keyHsb.b-brightness)<1;if(isActive){matchingDot={row,col};}let isFiltered=false;const dotKey=`${row}-${col}`;// Apply color ramp filtering\nif(isFiltering&&lValuesSet.size>0){isFiltered=!lValuesSet.has(cached.labLightness);}// Apply color picking mode filtering\nif(isPickingColor&&activeLValue!==null){isFiltered=cached.labLightness!==activeLValue;}// Check if dot is in activeDots set\nconst isInActiveDots=activeDots.has(dotKey);newDots.push({row,col,hexColor:cached.hexColor,labLightness:cached.labLightness,hsbText:cached.hsbText,isActive:isActive||isInActiveDots,isFiltered});}}}setDots(newDots);},[colorCache,isFiltering,isATextContrast,isAATextContrast,isAAATextContrast,lValues,activeDots,keyHexCode,isPickingColor,activeLValue,hue// Add hue to dependencies since we use it for comparison\n]);const handleDotClick=useCallback(dot=>{onDotClick(dot);},[onDotClick]);return/*#__PURE__*/_jsx(\"div\",{className:\"color-grid\",children:dots.map(dot=>/*#__PURE__*/_jsx(\"div\",{className:`dot ${dot.isActive?\"active\":\"\"} ${dot.isFiltered?\"filtered\":\"\"}`,style:{backgroundColor:dot.hexColor},onClick:()=>handleDotClick(dot),children:/*#__PURE__*/_jsxs(\"div\",{className:\"hex-tooltip\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"hex-value\",children:dot.hexColor}),/*#__PURE__*/_jsxs(\"div\",{className:\"lab-value\",children:[\"L*: \",dot.labLightness]}),/*#__PURE__*/_jsx(\"div\",{className:\"hsb-value\",children:dot.hsbText})]})},`${dot.row}-${dot.col}`))});};export default ColorGrid;","map":{"version":3,"names":["React","useEffect","useState","useCallback","hsbToRgb","rgbToHex","getRgbLabLightness","hexToHsb","jsx","_jsx","jsxs","_jsxs","ColorGrid","_ref","hue","isFiltering","isATextContrast","isAATextContrast","isAAATextContrast","lValues","onDotClick","activeDots","keyHexCode","isPickingColor","activeLValue","dots","setDots","colorCache","setColorCache","newColorCache","Array","fill","map","brightness","saturation","r","g","b","hexColor","toUpperCase","labLightness","Math","round","hsbText","newDots","lValuesSet","Set","matchingDot","keyHsb","row","col","_colorCache$brightnes","cached","isActive","abs","h","s","isFiltered","dotKey","size","has","isInActiveDots","push","handleDotClick","dot","className","children","style","backgroundColor","onClick"],"sources":["/Users/jamessullivan/Documents/color-grid/src/components/ColorGrid.tsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { Dot, ColorCache } from \"../types\";\nimport {\n  hsbToRgb,\n  rgbToHex,\n  getRgbLabLightness,\n  calculateContrastRatio,\n  colorDistance,\n  hexToHsb,\n} from \"../utils/colorUtils\";\nimport \"../styles/ColorGrid.css\";\n\ninterface ColorGridProps {\n  hue: number;\n  isFiltering: boolean;\n  isATextContrast: boolean;\n  isAATextContrast: boolean;\n  isAAATextContrast: boolean;\n  lValues: number[];\n  onDotClick: (dot: Dot) => void;\n  activeDots: Set<string>;\n  keyHexCode: string;\n  isPickingColor: boolean;\n  activeLValue: number | null;\n}\n\nconst ColorGrid: React.FC<ColorGridProps> = ({\n  hue,\n  isFiltering,\n  isATextContrast,\n  isAATextContrast,\n  isAAATextContrast,\n  lValues,\n  onDotClick,\n  activeDots,\n  keyHexCode,\n  isPickingColor,\n  activeLValue,\n}) => {\n  const [dots, setDots] = useState<Dot[]>([]);\n  const [colorCache, setColorCache] = useState<ColorCache[][]>([]);\n\n  // Pre-calculate color cache\n  useEffect(() => {\n    const newColorCache: ColorCache[][] = Array(101)\n      .fill(null)\n      .map(() => Array(101).fill(null));\n\n    for (let brightness = 0; brightness <= 100; brightness++) {\n      for (let saturation = 0; saturation <= 100; saturation++) {\n        const [r, g, b] = hsbToRgb(hue, saturation, brightness);\n        const hexColor = rgbToHex(r, g, b).toUpperCase();\n        const labLightness = Math.round(getRgbLabLightness(r, g, b));\n        newColorCache[brightness][saturation] = {\n          hexColor,\n          labLightness,\n          hsbText: `H: ${hue}° S: ${saturation}% B: ${brightness}%`,\n        };\n      }\n    }\n\n    setColorCache(newColorCache);\n  }, [hue]);\n\n  // Update dots when cache or filters change\n  useEffect(() => {\n    const newDots: Dot[] = [];\n    const lValuesSet = new Set(lValues);\n    let matchingDot: { row: number; col: number } | null = null;\n\n    // Convert key hex code to HSB if it exists\n    let keyHsb: { h: number; s: number; b: number } | null = null;\n    if (keyHexCode) {\n      keyHsb = hexToHsb(keyHexCode);\n    }\n\n    // First pass: collect all dots and find matching dot\n    for (let row = 0; row < 101; row++) {\n      for (let col = 0; col < 101; col++) {\n        const brightness = 100 - row;\n        const saturation = col;\n        const cached = colorCache[brightness]?.[col];\n\n        if (cached) {\n          // Check if this dot matches the key HSB values\n          const isActive =\n            keyHsb !== null &&\n            Math.abs(keyHsb.h - hue) < 1 && // Allow small floating point differences\n            Math.abs(keyHsb.s - saturation) < 1 &&\n            Math.abs(keyHsb.b - brightness) < 1;\n\n          if (isActive) {\n            matchingDot = { row, col };\n          }\n\n          let isFiltered = false;\n          const dotKey = `${row}-${col}`;\n\n          // Apply color ramp filtering\n          if (isFiltering && lValuesSet.size > 0) {\n            isFiltered = !lValuesSet.has(cached.labLightness);\n          }\n\n          // Apply color picking mode filtering\n          if (isPickingColor && activeLValue !== null) {\n            isFiltered = cached.labLightness !== activeLValue;\n          }\n\n          // Check if dot is in activeDots set\n          const isInActiveDots = activeDots.has(dotKey);\n\n          newDots.push({\n            row,\n            col,\n            hexColor: cached.hexColor,\n            labLightness: cached.labLightness,\n            hsbText: cached.hsbText,\n            isActive: isActive || isInActiveDots,\n            isFiltered,\n          });\n        }\n      }\n    }\n\n    setDots(newDots);\n  }, [\n    colorCache,\n    isFiltering,\n    isATextContrast,\n    isAATextContrast,\n    isAAATextContrast,\n    lValues,\n    activeDots,\n    keyHexCode,\n    isPickingColor,\n    activeLValue,\n    hue, // Add hue to dependencies since we use it for comparison\n  ]);\n\n  const handleDotClick = useCallback(\n    (dot: Dot) => {\n      onDotClick(dot);\n    },\n    [onDotClick]\n  );\n\n  return (\n    <div className=\"color-grid\">\n      {dots.map((dot) => (\n        <div\n          key={`${dot.row}-${dot.col}`}\n          className={`dot ${dot.isActive ? \"active\" : \"\"} ${\n            dot.isFiltered ? \"filtered\" : \"\"\n          }`}\n          style={{ backgroundColor: dot.hexColor }}\n          onClick={() => handleDotClick(dot)}\n        >\n          <div className=\"hex-tooltip\">\n            <div className=\"hex-value\">{dot.hexColor}</div>\n            <div className=\"lab-value\">L*: {dot.labLightness}</div>\n            <div className=\"hsb-value\">{dot.hsbText}</div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ColorGrid;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAE/D,OACEC,QAAQ,CACRC,QAAQ,CACRC,kBAAkB,CAGlBC,QAAQ,KACH,qBAAqB,CAC5B,MAAO,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAgBjC,KAAM,CAAAC,SAAmC,CAAGC,IAAA,EAYtC,IAZuC,CAC3CC,GAAG,CACHC,WAAW,CACXC,eAAe,CACfC,gBAAgB,CAChBC,iBAAiB,CACjBC,OAAO,CACPC,UAAU,CACVC,UAAU,CACVC,UAAU,CACVC,cAAc,CACdC,YACF,CAAC,CAAAX,IAAA,CACC,KAAM,CAACY,IAAI,CAAEC,OAAO,CAAC,CAAGxB,QAAQ,CAAQ,EAAE,CAAC,CAC3C,KAAM,CAACyB,UAAU,CAAEC,aAAa,CAAC,CAAG1B,QAAQ,CAAiB,EAAE,CAAC,CAEhE;AACAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAA4B,aAA6B,CAAGC,KAAK,CAAC,GAAG,CAAC,CAC7CC,IAAI,CAAC,IAAI,CAAC,CACVC,GAAG,CAAC,IAAMF,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAEnC,IAAK,GAAI,CAAAE,UAAU,CAAG,CAAC,CAAEA,UAAU,EAAI,GAAG,CAAEA,UAAU,EAAE,CAAE,CACxD,IAAK,GAAI,CAAAC,UAAU,CAAG,CAAC,CAAEA,UAAU,EAAI,GAAG,CAAEA,UAAU,EAAE,CAAE,CACxD,KAAM,CAACC,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CAAGjC,QAAQ,CAACU,GAAG,CAAEoB,UAAU,CAAED,UAAU,CAAC,CACvD,KAAM,CAAAK,QAAQ,CAAGjC,QAAQ,CAAC8B,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,CAChD,KAAM,CAAAC,YAAY,CAAGC,IAAI,CAACC,KAAK,CAACpC,kBAAkB,CAAC6B,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CAAC,CAC5DR,aAAa,CAACI,UAAU,CAAC,CAACC,UAAU,CAAC,CAAG,CACtCI,QAAQ,CACRE,YAAY,CACZG,OAAO,CAAE,MAAM7B,GAAG,QAAQoB,UAAU,QAAQD,UAAU,GACxD,CAAC,CACH,CACF,CAEAL,aAAa,CAACC,aAAa,CAAC,CAC9B,CAAC,CAAE,CAACf,GAAG,CAAC,CAAC,CAET;AACAb,SAAS,CAAC,IAAM,CACd,KAAM,CAAA2C,OAAc,CAAG,EAAE,CACzB,KAAM,CAAAC,UAAU,CAAG,GAAI,CAAAC,GAAG,CAAC3B,OAAO,CAAC,CACnC,GAAI,CAAA4B,WAAgD,CAAG,IAAI,CAE3D;AACA,GAAI,CAAAC,MAAkD,CAAG,IAAI,CAC7D,GAAI1B,UAAU,CAAE,CACd0B,MAAM,CAAGzC,QAAQ,CAACe,UAAU,CAAC,CAC/B,CAEA;AACA,IAAK,GAAI,CAAA2B,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAG,GAAG,CAAEA,GAAG,EAAE,CAAE,CAClC,IAAK,GAAI,CAAAC,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAG,GAAG,CAAEA,GAAG,EAAE,CAAE,KAAAC,qBAAA,CAClC,KAAM,CAAAlB,UAAU,CAAG,GAAG,CAAGgB,GAAG,CAC5B,KAAM,CAAAf,UAAU,CAAGgB,GAAG,CACtB,KAAM,CAAAE,MAAM,EAAAD,qBAAA,CAAGxB,UAAU,CAACM,UAAU,CAAC,UAAAkB,qBAAA,iBAAtBA,qBAAA,CAAyBD,GAAG,CAAC,CAE5C,GAAIE,MAAM,CAAE,CACV;AACA,KAAM,CAAAC,QAAQ,CACZL,MAAM,GAAK,IAAI,EACfP,IAAI,CAACa,GAAG,CAACN,MAAM,CAACO,CAAC,CAAGzC,GAAG,CAAC,CAAG,CAAC,EAAI;AAChC2B,IAAI,CAACa,GAAG,CAACN,MAAM,CAACQ,CAAC,CAAGtB,UAAU,CAAC,CAAG,CAAC,EACnCO,IAAI,CAACa,GAAG,CAACN,MAAM,CAACX,CAAC,CAAGJ,UAAU,CAAC,CAAG,CAAC,CAErC,GAAIoB,QAAQ,CAAE,CACZN,WAAW,CAAG,CAAEE,GAAG,CAAEC,GAAI,CAAC,CAC5B,CAEA,GAAI,CAAAO,UAAU,CAAG,KAAK,CACtB,KAAM,CAAAC,MAAM,CAAG,GAAGT,GAAG,IAAIC,GAAG,EAAE,CAE9B;AACA,GAAInC,WAAW,EAAI8B,UAAU,CAACc,IAAI,CAAG,CAAC,CAAE,CACtCF,UAAU,CAAG,CAACZ,UAAU,CAACe,GAAG,CAACR,MAAM,CAACZ,YAAY,CAAC,CACnD,CAEA;AACA,GAAIjB,cAAc,EAAIC,YAAY,GAAK,IAAI,CAAE,CAC3CiC,UAAU,CAAGL,MAAM,CAACZ,YAAY,GAAKhB,YAAY,CACnD,CAEA;AACA,KAAM,CAAAqC,cAAc,CAAGxC,UAAU,CAACuC,GAAG,CAACF,MAAM,CAAC,CAE7Cd,OAAO,CAACkB,IAAI,CAAC,CACXb,GAAG,CACHC,GAAG,CACHZ,QAAQ,CAAEc,MAAM,CAACd,QAAQ,CACzBE,YAAY,CAAEY,MAAM,CAACZ,YAAY,CACjCG,OAAO,CAAES,MAAM,CAACT,OAAO,CACvBU,QAAQ,CAAEA,QAAQ,EAAIQ,cAAc,CACpCJ,UACF,CAAC,CAAC,CACJ,CACF,CACF,CAEA/B,OAAO,CAACkB,OAAO,CAAC,CAClB,CAAC,CAAE,CACDjB,UAAU,CACVZ,WAAW,CACXC,eAAe,CACfC,gBAAgB,CAChBC,iBAAiB,CACjBC,OAAO,CACPE,UAAU,CACVC,UAAU,CACVC,cAAc,CACdC,YAAY,CACZV,GAAK;AAAA,CACN,CAAC,CAEF,KAAM,CAAAiD,cAAc,CAAG5D,WAAW,CAC/B6D,GAAQ,EAAK,CACZ5C,UAAU,CAAC4C,GAAG,CAAC,CACjB,CAAC,CACD,CAAC5C,UAAU,CACb,CAAC,CAED,mBACEX,IAAA,QAAKwD,SAAS,CAAC,YAAY,CAAAC,QAAA,CACxBzC,IAAI,CAACO,GAAG,CAAEgC,GAAG,eACZvD,IAAA,QAEEwD,SAAS,CAAE,OAAOD,GAAG,CAACX,QAAQ,CAAG,QAAQ,CAAG,EAAE,IAC5CW,GAAG,CAACP,UAAU,CAAG,UAAU,CAAG,EAAE,EAC/B,CACHU,KAAK,CAAE,CAAEC,eAAe,CAAEJ,GAAG,CAAC1B,QAAS,CAAE,CACzC+B,OAAO,CAAEA,CAAA,GAAMN,cAAc,CAACC,GAAG,CAAE,CAAAE,QAAA,cAEnCvD,KAAA,QAAKsD,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BzD,IAAA,QAAKwD,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAEF,GAAG,CAAC1B,QAAQ,CAAM,CAAC,cAC/C3B,KAAA,QAAKsD,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAC,MAAI,CAACF,GAAG,CAACxB,YAAY,EAAM,CAAC,cACvD/B,IAAA,QAAKwD,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAEF,GAAG,CAACrB,OAAO,CAAM,CAAC,EAC3C,CAAC,EAXD,GAAGqB,GAAG,CAACf,GAAG,IAAIe,GAAG,CAACd,GAAG,EAYvB,CACN,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAtC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}